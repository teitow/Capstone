plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.protobuf' version '0.9.1'
}

android {
    namespace 'com.ktm.capstone'
    compileSdk 34

    buildFeatures {
        buildConfig true
    }

    defaultConfig {
        applicationId "com.ktm.capstone"
        minSdk 28
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        def getLocalProperty = { key ->
            def propertiesFile = rootProject.file("local.properties")
            if (propertiesFile.exists()) {
                def Properties properties = new Properties()
                properties.load(new FileInputStream(propertiesFile))
                return properties.getProperty(key)
            } else {
                return System.getenv(key)
            }
        }

        buildConfigField 'String', 'AZURE_VISION_API_KEY', "\"${getLocalProperty('AZURE_VISION_API_KEY')}\""
        buildConfigField 'String', 'AZURE_TRANSLATE_API_KEY', "\"${getLocalProperty('AZURE_TRANSLATE_API_KEY')}\""
        buildConfigField 'String', 'AZURE_VISION_ENDPOINT', "\"${getLocalProperty('AZURE_VISION_ENDPOINT')}\""
        buildConfigField 'String', 'AZURE_TRANSLATE_ENDPOINT', "\"${getLocalProperty('AZURE_TRANSLATE_ENDPOINT')}\""
        buildConfigField 'String', 'RAPIDAPI_KEY', "\"${getLocalProperty('RAPIDAPI_KEY')}\""
        buildConfigField 'String', 'BARCODE_API_KEY', "\"${getLocalProperty('BARCODE_API_KEY')}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    packagingOptions {
        pickFirst "META-INF/DEPENDENCIES"
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES'
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.19.4'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.42.0'
        }
    }
    generateProtoTasks {
        all().forEach { task ->
            task.builtins {
                java {}
            }
            task.plugins {
                grpc {
                    option 'lite'
                }
            }
        }
    }
}

dependencies {
    // AndroidX 기본 라이브러리
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'

    // Google Material Design
    implementation 'com.google.android.material:material:1.12.0'

    // Google ML Kit Text Recognition
    implementation 'com.google.mlkit:text-recognition:16.0.0'
    implementation 'com.google.mlkit:text-recognition-korean:16.0.0'
    implementation 'com.google.mlkit:language-id:17.0.5'

    // Text to Speech and CameraX
    implementation 'androidx.camera:camera-core:1.4.0-alpha05'
    implementation 'androidx.camera:camera-camera2:1.4.0-alpha05'
    implementation 'androidx.camera:camera-lifecycle:1.4.0-alpha05'
    implementation 'androidx.camera:camera-view:1.4.0-alpha05'

    // OkHttp3
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'com.squareup.okio:okio:3.0.0'

    // gRPC dependencies
    implementation('io.grpc:grpc-okhttp:1.42.0') {
        exclude group: 'com.google.protobuf', module: 'protobuf-javalite'
    }
    implementation('io.grpc:grpc-protobuf-lite:1.42.0') {
        exclude group: 'com.google.protobuf', module: 'protobuf-javalite'
    }
    implementation 'io.grpc:grpc-stub:1.42.0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // Google Cloud Vision dependencies
    implementation('com.google.cloud:google-cloud-vision:3.8.0') {
        exclude group: 'com.google.protobuf', module: 'protobuf-javalite'
    }

    // ML Kit Barcode Scanning
    implementation 'com.google.mlkit:barcode-scanning:17.2.0'

    // JSON 처리
    implementation 'org.json:json:20211205'

    // Kotlin 표준 라이브러리
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.5.21"

    // 테스트 라이브러리
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Picasso 라이브러리 추가
    implementation 'com.squareup.picasso:picasso:2.71828'

    //바코드 스캔 관련
    implementation 'com.journeyapps:zxing-android-embedded:4.3.0'
    implementation 'com.google.zxing:core:3.4.1'
}
